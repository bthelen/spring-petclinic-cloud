resources:
  - name: source-code
    type: git
    source:
      uri: ((petclinic.codeRepo))
      branch: master
  - name: spring-petclinic-image
    type: docker-image
    source:
      repository: ((petclinic.image))
      tag: latest

jobs:
  - name: continuous-integration
    plan:
      - get: source-code
        trigger: true
      - task: compile-and-test
        output_mapping:
          target: target
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: adoptopenjdk
              tag: 11-jdk-hotspot
          inputs:
            - name: source-code
          outputs:
            - name: target
          caches:
            - path: source-code/maven
          run:
            path: /bin/bash
            args:
              - -c
              - |
                cd source-code
                if [[ -d $PWD/maven && ! -d $HOME/.m2 ]]; then
                  ln -s "$PWD/maven" "$HOME/.m2"
                fi
                # Added -DskipTests and -Dcheckstyle.skip to speed up task for demo purpose
                # They should not be included in a proper test pipeline
                ./mvnw package -DskipTests -Dcheckstyle.skip -pl spring-petclinic-api-gateway -am
                cp spring-petclinic-api-gateway/target/*.jar ../target
      - task: update-build-service-image
        params:
          KUBECONFIG_JSON: ((common-secrets.kubeconfigBuildServer))
        input_mapping:
          target: target
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((common-secrets.concourseHelperImage))
              tag: latest
          inputs:
            - name: target
          run:
            path: /bin/bash
            args:
              - -c
              - |
                docker login ((common-secrets.harborDomain)) -u '((common-secrets.harborUser))' -p '((common-secrets.harborPassword))'
                echo $KUBECONFIG_JSON>kubeconfig.json
                export KUBECONFIG=kubeconfig.json
                # export TMC_API_TOKEN=((common-secrets.tmcApiToken))
                # tmc login --name ((common-secrets.tmcContextName)) --no-configure
                set +e
                kp image list -n ((petclinic.tbsNamespace)) | grep "spring-petclinic-api-gateway"
                exists=$?
                set -e
                if [ $exists -eq 0 ]; then
                  kp image patch spring-petclinic-api-gateway \
                    --namespace ((petclinic.tbsNamespace)) \
                    --wait \
                    --local-path target/api-gateway.jar
                else
                  kp image create spring-petclinic-api-gateway \
                    --tag ((petclinic.image)) \
                    --cluster-builder default \
                    --namespace ((petclinic.tbsNamespace)) \
                    --wait \
                    --local-path target/api-gateway.jar
                fi
  - name: continuous-deployment
    public: true
    serial: true
    plan:
      - get: spring-petclinic-image
        trigger: true
      - get: source-code
      - task: create-wavefront-event
        params:
          WAVEFRONT_API_TOKEN: ((petclinic.wavefrontApiToken))
          WAVEFRONT_URL: ((petclinic.wavefrontUri))
          WAVEFRONT_DEPLOY_EVENT_NAME: ((petclinic.wavefrontDeployEventName))
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((common-secrets.concourseHelperImage))
              tag: latest
          run:
            path: /bin/bash
            args:
              - -c
              - |
                set -euo pipefail

                START_TIME=$(date +%s000)
                sleep 1
                END_TIME=$(date +%s000)

                curl \
                  -X POST \
                  --header "Content-Type: application/json" \
                  --header "Accept: application/json" \
                  --header "Authorization: Bearer ${WAVEFRONT_API_TOKEN}" \
                  -d "{
                    \"name\": \"${WAVEFRONT_DEPLOY_EVENT_NAME}\",
                    \"annotations\": {
                      \"severity\": \"info\",
                      \"type\": \"image deploy\",
                      \"details\": \"new spring-petclinic image deployed\"
                    },
                    \"startTime\": "${START_TIME}",
                    \"endTime\": "${END_TIME}"
                  }" "${WAVEFRONT_URL}/api/v2/event"

      - task: deploy-app
        params:
          KUBECONFIG_JSON: ((common-secrets.kubeconfigAppServer))
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((common-secrets.concourseHelperImage))
              tag: latest
          inputs:
            - name: source-code
            - name: spring-petclinic-image
          run:
            path: /bin/bash
            args:
              - -c
              - |
                export DIGEST=$(cat spring-petclinic-image/digest)
                echo $DIGEST

                # TODO Need to setup the kubeconfig
                echo $KUBECONFIG_JSON>kubeconfig.json
                export KUBECONFIG=kubeconfig.json
                export TMC_API_TOKEN=((common-secrets.tmcApiToken))
                tmc login --name ((common-secrets.tmcContextName)) --no-configure

                cat source-code/k8s/api-gateway-deployment.yaml

                # patch that deployment file
                sed 's#\${REPOSITORY_PREFIX}'"#((common-secrets.harborDomain))/spring-petclinic#g" source-code/k8s/api-gateway-deployment.yaml > ./patched-deployment-1.yaml
                sed "s/:latest/@$DIGEST/g" ./patched-deployment-1.yaml > patched-deployment.yaml

                cat patched-deployment.yaml

                kubectl apply -f patched-deployment.yaml
